
### JavaScript 功能大纲
**1. 核心功能**
   * **LLM 输出解析器**:
     - 使用正则表达式解析 LLM 输出的 XML 格式数据。
     - 提取 `<sys>`、`<win>`、`<plot>`、`<choices>`、`<map>`、`<skills>`、`<worlds>`、`<shop>` 等部分的内容。
     - 将提取到的数据转换成 JavaScript 对象，方便后续处理。
   * **UI 渲染器**:
     - 根据解析后的数据渲染 UI 界面。
     - **系统状态栏 (`#sys-info`)**: 显示时间、积分、HP、EP 等信息。
     - **窗口管理区 (`#windows` 或 `#main-window`)**:
       - 创建新的窗口。
       - 更新窗口内容。
       - 设置窗口位置、显示状态和主题风格。
     - **故事情节区 (`#plot-section`)**: 显示剧情文本。
     - **选择区 (`#choices-section`)**: 显示用户选项按钮。
     - **地图 (`#map-window`)**: 渲染地图，并根据位置状态应用不同的样式。
     - **技能树 (`#skills-window`)**:  展示技能信息。
     - **世界列表 (`#worlds-window`)**: 展示可选世界列表，支持分页。
     - **商店 (`#shop-window`)**: 展示商品列表。
     - **成就 (`#achievements-window`)**: 展示已获得的成就。
     - **角色状态 (`#character-window`)**: 展示角色属性。
     - **标题 (`#game-title`)**: 显示标题文本。
   * **事件处理器**:
     - 处理用户与 UI 界面的交互事件，例如点击按钮、输入命令等。
     - **窗口操作**: 拖拽、置顶、关闭、最大化、最小化等。
     - **选择选项**: 处理用户选择，并将选择结果发送给 LLM。
     - **地图交互**: 处理用户在地图上的点击事件，例如移动到可前往的地点。
     - **设置面板**:  处理设置面板中的操作，例如切换主题、调整音量等。
     - **世界列表**: 处理翻页操作。
     - **商店**: 处理购买操作。
**2. 数据管理**
   * **窗口状态管理**:  存储和管理窗口的位置、显示状态、主题风格等信息。
   * **成就管理**: 存储和管理已获得的成就列表。
   * **世界列表数据**: 存储和管理世界列表数据，包括当前页码、每页显示数量等。
   * **游戏状态存储**: 使用 `GM_setValue` 和 `GM_getValue` 存储和读取游戏状态，例如当前世界、时间、积分等。
**3.  其他功能**
   * **错误处理**: 处理 LLM 输出错误或异常情况。
   * **调试工具**: 提供调试工具，例如显示 LLM 输出的原始数据、记录事件日志等。
   * **国际化 (i18n)**:  根据 LLM 输出的语言自动调整 UI 文本。
### 下一步
-  实现 `updateUi` 函数，解析 LLM 输出并更新 UI 界面。
-  编写 CSS 样式代码，为页面元素添加样式。
-  逐步实现其他功能，例如窗口操作、选择选项、地图交互、设置面板等。

